{"version":3,"sources":["componets/app-info/app-info.js","componets/search-panel/search-panel.js","componets/app-filter/app-filter.js","componets/employeers-list-item/employeers-list-item.js","componets/employeers-list/employeers-list.js","componets/employeemnt-add-form/employeemnt-add-form.js","componets/app/app.js","index.js"],"names":["AppInfo","props","getEmplsNumber","getRiseEmplsNumber","className","SearchPanel","onInput","e","inputValue","target","value","onUpdateTerm","state","term","type","placeholder","name","onChange","this","Component","AppFilter","filterBySelector","selector","onUpdateFilter","document","querySelectorAll","forEach","button","classList","remove","add","payFilterValue","onClick","EmployeersListItem","salary","increase","id","rise","onDelete","onToggleProp","classes","defaultValue","EmployeersList","data","map","item","currentTarget","getAttribute","EmployeersAddForm","onValueChange","setState","submitForm","preventDefault","addItem","reset","onAddItem","method","onSubmit","App","deleteItem","filter","newItem","maxID","length","alert","prop","getCurrentEmployeersNumber","getRiseEmployeersNumber","person","searchByTerm","trim","indexOf","paymentFilter","visibleDataBySearch","visibleData","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ca4e36c.chunk.js","sourcesContent":["import \"./info.css\";\r\n\r\nconst AppInfo = (props) => {\r\n    const {getEmplsNumber,getRiseEmplsNumber} = props;\r\n\r\n    return(\r\n        <div className=\"app-info\">\r\n            <h1>Учет сотрудников нашей компании</h1>\r\n            <h2>Общее число сотрудников: {getEmplsNumber()}</h2>\r\n            <h2>Премию получат: {getRiseEmplsNumber()}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport \"./search.css\";\r\n\r\nclass SearchPanel extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            term: \"\",\r\n        };\r\n    }\r\n\r\n    onInput = (e) => {\r\n        const inputValue = e.target.value;\r\n        this.props.onUpdateTerm(inputValue);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <input type=\"text\"\r\n                placeholder=\"Найти сотрудника\" \r\n                className=\"search\" \r\n                name=\"s\" \r\n                onChange={this.onInput}\r\n                value={this.state.value}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import { Component } from \"react/cjs/react.production.min\";\r\nimport \"./filter.css\";\r\n\r\nclass AppFilter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selector: null,\r\n        }\r\n    }\r\n\r\n    filterBySelector = (e,selector) => {\r\n        this.props.onUpdateFilter(selector);\r\n\r\n        document.querySelectorAll(\".btn\").forEach(button => {\r\n            button.classList.remove(\"btn-light\")\r\n            button.classList.add(\"btn-outline-light\");\r\n        })\r\n\r\n        e.target.classList.remove(\"btn-outline-light\");\r\n        e.target.classList.add(\"btn-light\");\r\n    }\r\n\r\n    render(){\r\n        const {payFilterValue} = this.props;\r\n\r\n        return(\r\n            <div className=\"btn-group\">\r\n                <button \r\n                    className=\"btn btn-light\"\r\n                    type=\"button\"\r\n                    onClick={(e) => this.filterBySelector(e, \"all\")}>\r\n                        Все сотрудники\r\n                </button>\r\n                <button \r\n                    className=\"btn btn-outline-light\"\r\n                    type=\"button\"\r\n                    onClick={(e) => this.filterBySelector(e, \"rise\")}>\r\n                        На повышение\r\n                </button>\r\n                <button \r\n                    className=\"btn btn-outline-light\"\r\n                    type=\"button\"\r\n                    onClick={(e) => this.filterBySelector(e, \"payment\")}>\r\n                        З/П больше {payFilterValue}$\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppFilter;","import { Component } from \"react/cjs/react.production.min\";\r\nimport \"./item.css\";\r\n\r\nclass EmployeersListItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        const {name, salary, id, increase, rise, onDelete, onToggleProp} = this.props;\r\n\r\n        let classes = \"list-group-item d-flex justify-content-between\";\r\n        if (increase) {\r\n            classes += \" increase\";\r\n        }\r\n        if (rise) {\r\n            classes += \" like\";\r\n        }\r\n\r\n        return(\r\n            <li className={classes}>\r\n                <span\r\n                    className=\"list-group-item-label\"\r\n                    onClick={onToggleProp}\r\n                    data-toggle=\"rise\"\r\n                >{name}</span>\r\n                <input type=\"text\" className=\"list-group-item-input\" defaultValue={salary + '$'} />\r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                    <button type=\"button\"\r\n                        className=\"btn-cookie btn-sm\"\r\n                        onClick={onToggleProp}\r\n                        data-toggle=\"increase\"\r\n                    >\r\n                        <i className=\"fas fa-cookie\"></i>\r\n                    </button>\r\n\r\n                    <button type=\"button\"\r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}\r\n                    >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                    <i className=\"fas fa-star\"></i>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeersListItem;","import EmployeersListItem from \"../employeers-list-item/employeers-list-item\";\r\nimport \"./employeers-list.css\";\r\n\r\nconst EmployeersList = ({data, onDelete, onToggleProp}) => {\r\n    return(\r\n        <ul className=\"app-list list-group\">\r\n            {data.map(item => {\r\n                return <EmployeersListItem \r\n                    key={item.id}\r\n                    {...item}\r\n                    onDelete={() => onDelete(item.id)}\r\n                    onToggleProp={(e) => onToggleProp(item.id, e.currentTarget.getAttribute(\"data-toggle\"))}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default EmployeersList;","import { Component } from \"react/cjs/react.production.min\";\r\nimport \"./employeers-add.css\";\r\n\r\nclass EmployeersAddForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: null,\r\n            salary: null,\r\n        };\r\n        this.addItem = props.onAddItem;\r\n    }\r\n\r\n    onValueChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    \r\n    submitForm = e => {\r\n        e.preventDefault();\r\n        const {name, salary} = this.state;\r\n        this.addItem(name,salary);\r\n        e.target.reset()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"app-add-form\">\r\n                <h3>Добавьте нового сотрудника</h3>\r\n                <form method=\"POST\"\r\n                    className=\"add-form d-flex\"\r\n                    onSubmit={this.submitForm}>\r\n                    <input type=\"text\"\r\n                        className=\"form-control new-post-label\"\r\n                        onChange={this.onValueChange}\r\n                        name=\"name\"\r\n                        placeholder=\"Как его зовут?\" />\r\n                    <input type=\"number\"\r\n                        className=\"form-control new-post-label\"\r\n                        onChange={this.onValueChange}\r\n                        name=\"salary\"\r\n                        placeholder=\"З/П в $?\" />\r\n    \r\n                    <button type=\"submit\"\r\n                            className=\"btn btn-outline-light\">Добавить</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeersAddForm;","import {Component} from \"react\";\r\n\r\nimport AppInfo from \"../app-info/app-info\";\r\nimport SearchPanel from \"../search-panel/search-panel\";\r\nimport AppFilter from \"../app-filter/app-filter\";\r\nimport EmployeersList from \"../employeers-list/employeers-list\";\r\nimport EmployeersAddForm from \"../employeemnt-add-form/employeemnt-add-form\";\r\n\r\nimport \"./app.css\";\r\n\r\nclass App extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {id: 1, name:\"John C.\", salary: 800, increase: false, rise: false},\r\n                {id: 2, name:\"Mark G.\", salary: 1000, increase: false, rise: false},\r\n                {id: 3, name:\"Scaletta V.\", salary: 1200, increase: false, rise: false},\r\n                {id: 4, name:\"Morozov A.\", salary: 5000, increase: false, rise: false},\r\n            ],\r\n            term: '',\r\n            selector: null,\r\n        };\r\n        this.paymentFilter = 1000;\r\n        this.maxID = this.state.data.length + 1;\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState( ({data}) => {\r\n            return {\r\n                data: data.filter(item => item.id !== id)\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (name, salary) => {\r\n        const newItem = {\r\n            id: this.maxID,\r\n            name,\r\n            salary,\r\n            increase: false\r\n        }\r\n\r\n        if (!name || name.length < 4){\r\n            return alert(\"Введены некорректные данные!\")\r\n        }\r\n        if (!salary || salary.length < 3){\r\n            return alert(\"Введены некорректные данные!\")\r\n        }\r\n        \r\n        this.setState( ({data}) => {\r\n            const resultState = [...data, newItem];\r\n            return {\r\n                data: resultState\r\n            }\r\n        } )\r\n        this.maxID = this.maxID + 1;\r\n    }\r\n\r\n    onToggleProp = (id, prop) => {\r\n        this.setState(({data}) => ({\r\n            data: data.map(item => {\r\n                if (item.id === id){\r\n                    return {...item, [prop]: !item[prop]}\r\n                }\r\n                return item;\r\n            })\r\n        }))\r\n    }\r\n\r\n    getCurrentEmployeersNumber = () => {\r\n        return this.state.data.length;\r\n    }\r\n\r\n    getRiseEmployeersNumber = () => {\r\n        const employeers = this.state.data;\r\n        const riseEmployeers = employeers.filter(person => {\r\n            if (person.increase){\r\n                return person;\r\n            }\r\n        })\r\n        return riseEmployeers.length;\r\n    }\r\n\r\n    searchByTerm = (data,term) => {\r\n        if (term.trim().length === 0){\r\n            return data;\r\n        }\r\n        return data.filter(item => {\r\n            if (item.name.indexOf(term) > -1){\r\n                return item;\r\n            }\r\n        })\r\n    }\r\n\r\n    onUpdateTerm = (term) => {\r\n        this.setState({term})\r\n    }\r\n\r\n    filterBySelector = (data,selector=null) => {\r\n        if (selector === \"rise\"){\r\n            return data.filter(item => item.rise);\r\n        } else if (selector === \"payment\"){\r\n            return data.filter(item => item.salary > this.paymentFilter);\r\n        } else {\r\n            return data;\r\n        }\r\n    }\r\n\r\n    onUpdateFilter = (selector) => {\r\n        this.setState({selector})\r\n    }\r\n\r\n    render(){\r\n        const {data, term, selector} = this.state;\r\n        const visibleDataBySearch = this.searchByTerm(data,term);\r\n        const visibleData = this.filterBySelector(\r\n            visibleDataBySearch,\r\n            selector\r\n        );\r\n\r\n        return(\r\n            <div className=\"app\">\r\n                <AppInfo \r\n                    getEmplsNumber={this.getCurrentEmployeersNumber}\r\n                    getRiseEmplsNumber={this.getRiseEmployeersNumber}/>\r\n                <div className=\"search-panel\">\r\n                    <SearchPanel onUpdateTerm={this.onUpdateTerm} />\r\n                    <AppFilter\r\n                        onUpdateFilter={this.onUpdateFilter}\r\n                        payFilterValue={this.paymentFilter}\r\n                    />\r\n                </div>\r\n                <EmployeersList\r\n                    data={visibleData}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleProp={this.onToggleProp}\r\n                />\r\n                <EmployeersAddForm onAddItem={this.addItem} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./componets/app/app\";\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}